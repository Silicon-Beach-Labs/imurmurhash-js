/**
 * @preserve
 * JS Implementation of incremental MurmurHash3 (r136) (as of May 20, 2011)
 *
 * @author <a href="mailto:jensyt@gmail.com">Jens Taylor</a>
 * @see http://github.com/homebrewing/brauhaus-diff
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/murmurhash-js
 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
 * @see http://sites.google.com/site/murmurhash/
 */
!function(){function t(h,r){var i;return i=this instanceof t?this:e,i.reset(r),"string"==typeof h&&h.length>0&&i.hash(h),i!==this?i:void 0}var e;t.prototype.hash=function(t){var e,h,r,i,s,o,a,n;switch(a=t.length,this.length+=a,i=this.k1,s=0,n=0,this.remainder){case 0:i^=a>n++?65535&t.charCodeAt(s++):0;case 1:i^=a>n++?(65535&t.charCodeAt(s++))<<8:0;case 2:i^=a>n++?(65535&t.charCodeAt(s++))<<16:0;case 3:i^=a>n?(255&t.charCodeAt(s))<<24:0,i^=a>n?(65280&t.charCodeAt(s++))>>8:0}if(e=3&a+this.remainder,h=a-e,this.remainder=e,0>=h)return this.k1=i,void 0;for(r=this.h1;;){if(i=4294967295&11601*i+3432906752*(65535&i),i=i<<15|i>>>17,i=4294967295&13715*i+461832192*(65535&i),r^=i,r=r<<13|r>>>19,r=4294967295&5*r+3864292196,s>=h)break;o=t.charCodeAt(s+3),i=65535&t.charCodeAt(s++)^(65535&t.charCodeAt(s++))<<8^(65535&t.charCodeAt(s++))<<16^(255&o)<<24^(65280&o)>>8,s++}switch(i=0,e){case 3:i^=(255&t.charCodeAt(s+2))<<16;case 2:i^=(255&t.charCodeAt(s+1))<<8;case 1:i^=255&t.charCodeAt(s)}return this.h1=r,this.k1=i,this},t.prototype.result=function(){var t,e;return t=this.k1,e=this.h1,t>0&&(t=4294967295&11601*t+3432906752*(65535&t),t=t<<15|t>>>17,t=4294967295&13715*t+461832192*(65535&t),e^=t),e^=this.length,e^=e>>>16,e=4294967295&51819*e+2246770688*(65535&e),e^=e>>>13,e=4294967295&44597*e+3266445312*(65535&e),e^=e>>>16,e>>>0},t.prototype.reset=function(t){return this.h1="number"==typeof t?t:0,this.remainder=this.k1=this.length=0,this},e=new t,"undefined"!=typeof module?module.exports=t:this.MurmurHash3=t}();